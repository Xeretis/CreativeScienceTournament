openapi: 3.0.1
info:
  title: CreativeScienceTournament
  version: v1
paths:
  /Api/Auth/Login:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /Api/Auth/User:
    get:
      tags:
        - Auth
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /Api/Auth/Roles:
    get:
      tags:
        - Auth
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /Api/Auth/Logout:
    delete:
      tags:
        - Auth
      responses:
        '204':
          description: No Content
  /Api/Teams:
    get:
      tags:
        - Teams
      parameters:
        - name: Filters
          in: query
          style: form
          schema:
            type: string
        - name: Sorts
          in: query
          style: form
          schema:
            type: string
        - name: Page
          in: query
          style: form
          schema:
            maximum: 2147483647
            minimum: 1
            type: integer
            format: int32
        - name: PageSize
          in: query
          style: form
          schema:
            maximum: 2147483647
            minimum: 1
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndexTeamResponse'
    post:
      tags:
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/Api/Teams/{id}':
    get:
      tags:
        - Teams
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    patch:
      tags:
        - Teams
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateTeamRequest'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Teams
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /Api/Teams/Leave:
    post:
      tags:
        - Teams
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /Api/Users:
    get:
      tags:
        - Users
      parameters:
        - name: Filters
          in: query
          style: form
          schema:
            type: string
        - name: Sorts
          in: query
          style: form
          schema:
            type: string
        - name: Page
          in: query
          style: form
          schema:
            maximum: 2147483647
            minimum: 1
            type: integer
            format: int32
        - name: PageSize
          in: query
          style: form
          schema:
            maximum: 2147483647
            minimum: 1
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndexUsersResponse'
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/Api/Users/{id}':
    get:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    patch:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    CreateTeamRequest:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
      additionalProperties: false
    CreateUserRequest:
      required:
        - confirmPassword
        - email
        - password
        - userName
      type: object
      properties:
        email:
          minLength: 1
          type: string
        userName:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
        confirmPassword:
          minLength: 1
          type: string
      additionalProperties: false
    IndexTeamResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        points:
          type: integer
          format: int32
        ownerId:
          type: string
          nullable: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/IndexTeamResponseUser'
          nullable: true
      additionalProperties: false
    IndexTeamResponseUser:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
      additionalProperties: false
    IndexUsersResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        teamId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    LoginRequest:
      required:
        - email
        - password
      type: object
      properties:
        email:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
      additionalProperties: false
    LoginResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/LoginResponseUser'
      additionalProperties: false
    LoginResponseUser:
      type: object
      properties:
        id:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        roles:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    UpdateTeamRequest:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
      additionalProperties: false
    UpdateUserRequest:
      required:
        - email
        - userName
      type: object
      properties:
        userName:
          minLength: 1
          type: string
        email:
          minLength: 1
          type: string
        newPassword:
          type: string
          nullable: true
        confirmNewPassword:
          type: string
          nullable: true
        currentPassword:
          type: string
          nullable: true
      additionalProperties: false
    UserResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        emailConfirmed:
          type: boolean
      additionalProperties: false