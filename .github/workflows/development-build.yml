name: Development build
run-name: ${{ github.actor }} is doing a development build ðŸš€
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '7.0' ]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: "trust"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install psql
        run: |
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends postgresql-client
      - name: Create Resources/Images directory
        run: mkdir -p WebApp/Resources/Images
      - name: Create test database
        run: psql -h localhost -U postgres -c "CREATE DATABASE \"CreativeScienceTournament\";"
      - name: Display dotnet version
        run: dotnet --version
      - name: Install dependencies
        run: dotnet restore
      - name: Build backend
        run: dotnet build --configuration Debug --no-restore
      - name: Build frontend
        run: |
            cd WebApp/ClientApp
            pnpm schema
            pnpm build
      - name: Verify changed files
        uses: tj-actions/verify-changed-files@v13
        id: verify-changed-files
        with:
          files: |
            **/schema.json
      - name: Commit new schema
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add WebApp/ClientApp/src/api/schema/v1/schema.json
            git commit -m "Update schema.json"
      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
  